<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ì–ª–∞–≤–Ω–∞—è - –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/main.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />  <!--  Leaflet CSS -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>  <!-- Leaflet JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css">  <!-- MarkerCluster CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css"> <!-- MarkerCluster Default CSS -->
    <script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script> <!-- MarkerCluster JS -->
</head>
<body>
<div class="app-container">
    <!-- –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å -->
    <div class="profile-sidebar">

        <ul class="profile-nav">
            <li><a href="/" class="active"><i>üè†</i> –ì–ª–∞–≤–Ω–∞—è</a></li>
            <li><a href="/contacts"><i>üìû</i> –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞</a></li>
            <li><a href="/team"><i>‚öΩ</i> –ë–ª–∏–∂–∞–π—à–∏–µ –∏–≥—Ä—ã</a></li>
        </ul>
    </div>

    <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ -->
    <div class="main-content">
        <div class="profile-header">
            <div class="profile-btn-container">
                <button class="profile-btn" id="profileButton">
                    <i class="profile-icon">üë§</i>
                    <span class="profile-name">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</span>
                </button>
            </div>
        </div>
        <div class="page-header">
            <h1>–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏</h1>
            <p>–ù–∞–π–¥–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–ª–æ—â–∞–¥–∫—É –¥–ª—è –∏–≥—Ä—ã –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ</p>
        </div>

        <div class="map-container">
            <!-- –ö–∞—Ä—Ç–∞ -->
            <div id="courts-map"></div>

          <!-- –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
          <div class="filters-panel">
              <h3>–§–∏–ª—å—Ç—Ä—ã</h3>

              <div class="search-box">
                  <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–¥—Ä–µ—Å—É">
              </div>

              <div class="filter-group">
                  <h4>–í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã</h4>
                  <#list services as service>
                      <div class="checkbox-item">
                          <input type="checkbox" id="service-${service.id}"
                                 data-service-id="${service.id}" class="service-filter">
                          <label for="service-${service.id}">${service.name}</label>
                      </div>
                  </#list>
              </div>
</div>
</div>
</div>
</div>

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–ª–æ—â–∞–¥–∫–∏ -->
<div class="court-modal" id="courtModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modalCourtTitle"></h3>
            <button class="close-modal" id="closeModal">&times;</button>
        </div>
        <div class="modal-body">
            <div class="court-info">
                <p><i>–ê–¥—Ä–µ—Å:</i><span id="modalCourtAddress"></span></p>
                <p><i>–ü–ª–∞—Ç–Ω–æ:</i><span id="modalCourtPrice"></span></p>
                <p><i>–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–ø–ª–∞—Ç–µ:</i><span id="modalCourtComment"></span></p>
                <p><i>–¢–µ–ª–µ—Ñ–æ–Ω:</i><span id="modalCourtPhone"></span></p>
                <p><i>–ü–æ—á—Ç–∞:</i><span id="modalCourtEmail"></span></p>
                <p><i>–û—Å–≤–µ—â–µ–Ω–∏–µ:</i><span id="modalCourtLighting"></span></p>
                <p><i>–ú–µ—Å—Ç–∞:</i><span id="modalCourtSeats"></span></p>
                <p><i>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–ª—è –ª—é–¥–µ–π —Å –û–í–ó:</i><span id="modalCourtDisability"></span></p>
                <div class="court-services" id="courtServicesContainer">
                    <!-- –°—é–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —É—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ JS -->
                </div>
            </div>

            <p id="modalCourtDescription"></p>
        </div>
        <div class="modal-footer">

        </div>
    </div>
</div>

<!-- –§—É—Ç–µ—Ä -->
<footer>
    &copy; –ë–∞–≤–∞–± –ú–∞—Ö–º—É–¥ 231-361, 2025
</footer>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
        const map = L.map('courts-map').setView([55.751244, 37.618423], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        // –û–±—ä–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏
        const mapManager = {
            selectedServices: new Set(),
            allMarkers: [],
            markerCluster: L.markerClusterGroup(),

            init: function(courts) {
                map.addLayer(this.markerCluster);
                this.createMarkers(courts);
                this.setupFilterHandlers();
                this.applyFilters();
            },

            createMarkers: function(courts) {
                this.allMarkers = courts.map(court => {
                    const marker = L.marker([court.lat, court.lng]);

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ serviceId
                    marker.courtData = court;
                   marker.serviceIds = court.services.map(s => String(s).toLowerCase().replace(/\s+/g, '-'));

                    marker.bindPopup(`
                        <b>court.title</b><br>
                        court.address<br>
                        –£—Å–ª—É–≥–∏: court.services.join(', ')
                    `);

                    marker.on('click', () => {
                        updateModalContent(court);
                        document.getElementById('courtModal').style.display = 'flex';
                    });

                    return marker;
                });
            },

            setupFilterHandlers: function() {
                document.querySelectorAll('.service-filter').forEach(checkbox => {
                    checkbox.addEventListener('change', (e) => {
                        const serviceId = e.target.dataset.serviceId.toLowerCase().replace(/\s+/g, '-');

                        if (e.target.checked) {
                            this.selectedServices.add(serviceId);
                        } else {
                            this.selectedServices.delete(serviceId);
                        }

                        this.applyFilters();
                    });
                });
            },

            applyFilters: function() {
                this.markerCluster.clearLayers();
                // –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                if (this.selectedServices.size === 0) {
                    this.allMarkers.forEach(marker => {
                        this.markerCluster.addLayer(marker);
                    });
                    return;
                }

                // –§–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Ä–∫–µ—Ä—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Å–ª—É–≥–∞–º
                this.allMarkers.forEach(marker => {
                    const hasMatchingService = marker.serviceIds.some(serviceId =>
                        this.selectedServices.has(serviceId)
                    );

                    if (hasMatchingService) {
                        this.markerCluster.addLayer(marker);
                    }
                });
            }
        };

        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –∏–∑ FreeMarker
        const courts = [
            <#list fields as field>
            {
                id: ${field.id?c},
                title: "${field.name?js_string}",
                lat: ${field.x?string.computer},
                lng: ${field.y?string.computer},
                address: "${field.address?js_string}",
                price: "${(field.is_paid!'')?js_string}",
                priceComment: "${(field.paymentComments!'')?js_string}",
                phone: "${(field.phone!'')?js_string}",
                email: "${(field.email!'')?js_string}",
                lighting: "${(field.lighting!'')?js_string}",
                seats: "${(field.seats!'–ù–µ —É–∫–∞–∑–∞–Ω–æ')?js_string}",
                disability: "${(field.disability!'')?js_string}",
                hours: "${(field.workingHoursWinter!'08:00 - 22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ')?js_string}",
                serviceNames: [
                 <#list field.services as service>
                                    "${service.name}"<#if service_has_next>,</#if>
                                    </#list>
                                ],
                rating: 4.8,
                services: [
                    <#list field.services as service>
                    "${service.id}"<#if service_has_next>,</#if>
                    </#list>
                ],
                description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ ${field.name?js_string}, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–∞—è –ø–æ –∞–¥—Ä–µ—Å—É ${field.address?js_string}"
            }<#if field_has_next>,</#if>
            </#list>
        ];

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–∞—Ä—Ç—ã
        mapManager.init(courts);

        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        function updateModalContent(court) {
            document.getElementById('modalCourtTitle').textContent = court.title;
            document.getElementById('modalCourtAddress').textContent = court.address;
            document.getElementById('modalCourtPrice').textContent = court.price;
            document.getElementById('modalCourtComment').textContent = court.priceComment;
            document.getElementById('modalCourtPhone').textContent = court.phone;
            document.getElementById('modalCourtEmail').textContent = court.email;
            document.getElementById('modalCourtLighting').textContent = court.lighting;
            document.getElementById('modalCourtSeats').textContent = court.seats;
            document.getElementById('modalCourtDisability').textContent = court.disability;

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥
            const servicesContainer = document.getElementById('courtServicesContainer');
            servicesContainer.innerHTML = '';
            court.serviceNames.forEach(service => {
                const badge = document.createElement('span');
                badge.className = 'service-badge';
                badge.textContent = service;
                servicesContainer.appendChild(badge);
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        document.getElementById('closeModal').addEventListener('click', function() {
            document.getElementById('courtModal').style.display = 'none';
        });

        document.getElementById('courtModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });

        document.getElementById('profileButton').addEventListener('click', function() {
            window.location.href = '/profile';
        });
    });
</script>
</body>
</html>